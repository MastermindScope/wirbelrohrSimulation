/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  8                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      surfaceFeatureExtractDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


rohr
{
    surfaces
    (
        "rohr.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle   180;

    geometricalTestOnly    extractFromSurface;

    writeObj                no;
    writeVTK                no;
}

drossel
{
    surfaces
    (
        "drossel.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle   180;

    geometricalTestOnly    extractFromSurface;

    writeObj                no;
    writeVTK                yes;
}

inlet
{
    surfaces
    (
        "inlet.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle   180;

    geometricalTestOnly    extractFromSurface;

    writeObj                no;
    writeVTK                no;
	
	subsetFeatures
    {
        // Keep nonManifold edges (edges with >2 connected faces)
    nonManifoldEdges       yes; //no

    // Keep open edges (edges with 1 connected face)
    openEdges       yes; //yes
    }
}

wOutlet
{
    surfaces
    (
        "wOutlet.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle   180;

    geometricalTestOnly    extractFromSurface;

    writeObj                no;
    writeVTK                no;
	
	subsetFeatures
    {
        // Keep nonManifold edges (edges with >2 connected faces)
    nonManifoldEdges       yes; //no

    // Keep open edges (edges with 1 connected face)
    openEdges       yes; //yes
    }
}

cOutlet
{
    surfaces
    (
        "cOutlet.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle   180;

    geometricalTestOnly    extractFromSurface;

    writeObj                no;
    writeVTK                no;
	
	subsetFeatures
    {
        // Keep nonManifold edges (edges with >2 connected faces)
    nonManifoldEdges       yes; //no

    // Keep open edges (edges with 1 connected face)
    openEdges       yes; //yes
    }
}

wirbelKammer
{
    surfaces
    (
        "wirbelKammer.stl"
    );

    // Mark edges whose adjacent surface normals are at an angle less
    // than includedAngle as features
    // - 0  : selects no edges
    // - 180: selects all edges
    includedAngle   180;

    geometricalTestOnly    extractFromSurface;

    writeObj                no;
    writeVTK                yes;
	
	subsetFeatures
    {
        // Keep nonManifold edges (edges with >2 connected faces)
    nonManifoldEdges       yes; //no

    // Keep open edges (edges with 1 connected face)
    openEdges       yes; //yes
    }
}

// ************************************************************************* //
